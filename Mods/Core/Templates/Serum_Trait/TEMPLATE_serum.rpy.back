init -1 python:
    def TEMPLATE_on_apply(the_person, the_serum, add_to_log):
        the_person.change_slut(2)
        return

    def TEMPLATE_on_remove(the_person, the_serum, add_to_log):
        the_person.change_love(-20, add_to_log = add_to_log) #She realizes she's been drugged?
        return

    def TEMPLATE_on_turn(the_person, the_serum, add_to_log):
        the_person.change_arousal(5)
        return

    def TEMPLATE_on_day(the_person, the_serum, add_to_log):
        the_person.change_energy(100)   #Gives a great night's rest
        return

    def add_TEMPLATE_serum():
        TEMPLATE_serum_trait = SerumTraitMod(name = "TEMPLATE",        # The name of the serum
            desc = "TEMPLATE",                                          # Make up something about how it works.
            positive_slug = "+1 TEMPLATE",                               # The green section in the serum design screen
            negative_slug = "+25 Research",                             # The red section in the serum design screen
            research_added = 0,                                         # Extra research required to develop the protoype
            slots_added = 0,                                            # IF it adds any additioanl serum trait slots. Usually No
            production_added = 0,                                       # If it adds production time
            duration_added = 0,                                         # IF it makes the final serum last longer or shorter.
            base_side_effect_chance = 0,                                # %Chane of side effects without any mastery
            clarity_added = 0,                                          # Clarity requirement added to develop serum using this trait
            on_apply = TEMPLATE_on_apply,                               # Function to run when this trait applies
            on_remove = TEMPLATE_on_remove,                             # Function to run when this trait wears off
            on_turn = TEMPLATE_on_turn,                                 # Function to run every turn this trait is active
            on_day = TEMPLATE_on_day,                                   # Function to run if person sleeps while under the effects
            requires = None,                                            # If it requires another serum to be researched first
            tier = 0,                                                   # Use 0-3
            start_researched = False,                                   # If trait is already researched
            research_needed=50,                                         # Research required to unlock trait
            exclude_tags=None,                                          # Traits with similar  tags cannot combine. Currently "Production", "Suggest", "Energy", "Nanobots"
            is_side_effect = False,                                     # IF this trait is actually a side effect and not researchable
            clarity_cost = 50,                                          # Cost in clarity to begin researching this trait
            start_unlocked = False,                                     # IF this trait does not require clarity to unlock
            start_enabled = True,                                       # MOD function. if False, players MUST enable the serum in the mod options menu from MC bedroom.
<<<<<<< HEAD
            mental_aspect = 0, 
            physical_aspect = 0, 
            sexual_aspect = 0, 
            medical_aspect = 0, 
            flaws_aspect = 0, 
            attention = 0)                                      
=======
            mental_aspect = 0,                                          # The following 5 aspects govern serum value for contracts
            physical_aspect = 0,
            sexual_aspect = 0,
            medical_aspect = 0,
            flaws_aspect = 0,
            attention = 0)                                              # How much attention this serum trait generates for story purposes.
>>>>>>> 6e6cb5b2a2e133ad3fbdb0a9cee754ecc1301374


# any label that starts with serum_mod is added to the serum mod list
label serum_mod_TEMPLATE_serum_trait(stack):
    python:
        add_TEMPLATE_serum()
        execute_hijack_call(stack)
    return
